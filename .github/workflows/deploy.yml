name: Deploy to NPM

on: [push]

jobs:
  deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Step 1: Check out the repository's code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch all history for all tags and branches, which is required for versioning
          fetch-depth: 0

      # Step 2: Set up the Node.js environment
      # This action also configures the .npmrc file for authentication with the registry.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x' # Specify the Node.js version to use
          registry-url: 'https://registry.npmjs.org' # Set the registry to npm

      # Step 3: Install project dependencies
      - name: Install dependencies
        run: npm ci # Use 'ci' for faster, more reliable installs in CI environments

      # Step 4: Build the package for distribution
      - name: Build package
        run: npm run build # Runs the 'build' script from your package.json

      # Step 5: Configure Git for versioning
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # Step 6: Bump version, create tag, and publish to npm
      - name: Bump version and publish
        run: |
          # Increment the patch version number, create a commit, and tag it.
          # The '%s' in the commit message is a placeholder for the new version number.
          npm version patch -m "chore(release): %s"
          
          # Publish the package to the npm registry.
          # The '--access public' flag is added to ensure it can be published publicly,
          # which is often necessary for scoped packages (@scope/package).
          npm publish --access public
        env:
          # This environment variable is used by npm to authenticate.
          # It gets its value from the GitHub secret you created.
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Step 7: Push the new commit and tag back to the GitHub repository
      - name: Push changes
        run: git push --follow-tags